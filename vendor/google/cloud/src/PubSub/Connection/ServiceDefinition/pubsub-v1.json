{
  "batchPath": "batch",
  "id": "pubsub:v1",
  "documentationLink": "https://cloud.google.com/pubsub/docs",
  "revision": "20170308",
  "title": "Google Cloud Pub/Sub API",
  "ownerName": "Google",
  "discoveryVersion": "v1",
  "resources": {
    "projects": {
      "resources": {
        "subscriptions": {
          "methods": {
            "create": {
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}",
              "path": "v1/{+name}",
              "id": "pubsub.projects.subscriptions.create",
              "request": {
                "$ref": "Subscription"
              },
              "description": "Creates a subscription to a given topic.\nIf the subscription already exists, returns `ALREADY_EXISTS`.\nIf the corresponding topic doesn't exist, returns `NOT_FOUND`.\n\nIf the name is not provided in the request, the server will assign a random\nname for this subscription on the same project as the topic, conforming\nto the\n[resource name format](https://cloud.google.com/pubsub/docs/overview#names).\nThe generated name is populated in the returned Subscription object.\nNote that for REST API requests, you must specify a name in the request.",
              "response": {
                "$ref": "Subscription"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "The name of the subscription. It must have the format\n`\"projects/{project}/subscriptions/{subscription}\"`. `{subscription}` must\nstart with a letter, and contain only letters (`[A-Za-z]`), numbers\n(`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),\nplus (`+`) or percent signs (`%`). It must be between 3 and 255 characters\nin length, and it must not start with `\"goog\"`.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ]
            },
            "acknowledge": {
              "request": {
                "$ref": "AcknowledgeRequest"
              },
              "description": "Acknowledges the messages associated with the `ack_ids` in the\n`AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages\nfrom the subscription.\n\nAcknowledging a message whose ack deadline has expired may succeed,\nbut such a message may be redelivered later. Acknowledging a message more\nthan once will not result in an error.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "subscription"
              ],
              "httpMethod": "POST",
              "parameters": {
                "subscription": {
                  "description": "The subscription whose message is being acknowledged.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:acknowledge",
              "path": "v1/{+subscription}:acknowledge",
              "id": "pubsub.projects.subscriptions.acknowledge"
            },
            "patch": {
              "response": {
                "$ref": "Subscription"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the subscription. It must have the format\n`\"projects/{project}/subscriptions/{subscription}\"`. `{subscription}` must\nstart with a letter, and contain only letters (`[A-Za-z]`), numbers\n(`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),\nplus (`+`) or percent signs (`%`). It must be between 3 and 255 characters\nin length, and it must not start with `\"goog\"`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}",
              "path": "v1/{+name}",
              "id": "pubsub.projects.subscriptions.patch",
              "description": "Updates an existing subscription. Note that certain properties of a\nsubscription, such as its topic, are not modifiable.",
              "request": {
                "$ref": "UpdateSubscriptionRequest"
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "subscription": {
                  "description": "The name of the subscription to get.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}",
              "id": "pubsub.projects.subscriptions.get",
              "path": "v1/{+subscription}",
              "description": "Gets the configuration details of a subscription.",
              "httpMethod": "GET",
              "response": {
                "$ref": "Subscription"
              },
              "parameterOrder": [
                "subscription"
              ]
            },
            "testIamPermissions": {
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
              "httpMethod": "POST",
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "parameters": {
                "resource": {
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:testIamPermissions",
              "id": "pubsub.projects.subscriptions.testIamPermissions",
              "path": "v1/{+resource}:testIamPermissions"
            },
            "modifyPushConfig": {
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:modifyPushConfig",
              "id": "pubsub.projects.subscriptions.modifyPushConfig",
              "path": "v1/{+subscription}:modifyPushConfig",
              "request": {
                "$ref": "ModifyPushConfigRequest"
              },
              "description": "Modifies the `PushConfig` for a specified subscription.\n\nThis may be used to change a push subscription to a pull one (signified by\nan empty `PushConfig`) or vice versa, or change the endpoint URL and other\nattributes of a push subscription. Messages will accumulate for delivery\ncontinuously through the call regardless of changes to the `PushConfig`.",
              "httpMethod": "POST",
              "parameterOrder": [
                "subscription"
              ],
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "subscription": {
                  "description": "The name of the subscription.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ]
            },
            "seek": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "subscription": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "The subscription to affect."
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:seek",
              "path": "v1/{+subscription}:seek",
              "id": "pubsub.projects.subscriptions.seek",
              "description": "Seeks an existing subscription to a point in time or to a given snapshot,\nwhichever is provided in the request.",
              "request": {
                "$ref": "SeekRequest"
              },
              "response": {
                "$ref": "SeekResponse"
              },
              "parameterOrder": [
                "subscription"
              ],
              "httpMethod": "POST"
            },
            "delete": {
              "id": "pubsub.projects.subscriptions.delete",
              "path": "v1/{+subscription}",
              "description": "Deletes an existing subscription. All messages retained in the subscription\nare immediately dropped. Calls to `Pull` after deletion will return\n`NOT_FOUND`. After a subscription is deleted, a new one may be created with\nthe same name, but the new one has no association with the old\nsubscription or its topic unless the same topic is specified.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "subscription"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "subscription": {
                  "description": "The subscription to delete.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}"
            },
            "setIamPolicy": {
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "resource": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field."
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:setIamPolicy",
              "path": "v1/{+resource}:setIamPolicy",
              "id": "pubsub.projects.subscriptions.setIamPolicy",
              "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
              "request": {
                "$ref": "SetIamPolicyRequest"
              }
            },
            "getIamPolicy": {
              "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "GET",
              "parameters": {
                "resource": {
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:getIamPolicy",
              "path": "v1/{+resource}:getIamPolicy",
              "id": "pubsub.projects.subscriptions.getIamPolicy"
            },
            "modifyAckDeadline": {
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "subscription"
              ],
              "httpMethod": "POST",
              "parameters": {
                "subscription": {
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$",
                  "location": "path",
                  "description": "The name of the subscription.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:modifyAckDeadline",
              "path": "v1/{+subscription}:modifyAckDeadline",
              "id": "pubsub.projects.subscriptions.modifyAckDeadline",
              "request": {
                "$ref": "ModifyAckDeadlineRequest"
              },
              "description": "Modifies the ack deadline for a specific message. This method is useful\nto indicate that more time is needed to process a message by the\nsubscriber, or to make the message available for redelivery if the\nprocessing was interrupted. Note that this does not modify the\nsubscription-level `ackDeadlineSeconds` used for subsequent messages."
            },
            "pull": {
              "id": "pubsub.projects.subscriptions.pull",
              "path": "v1/{+subscription}:pull",
              "request": {
                "$ref": "PullRequest"
              },
              "description": "Pulls messages from the server. Returns an empty list if there are no\nmessages available in the backlog. The server may return `UNAVAILABLE` if\nthere are too many concurrent pull requests pending for the given\nsubscription.",
              "httpMethod": "POST",
              "parameterOrder": [
                "subscription"
              ],
              "response": {
                "$ref": "PullResponse"
              },
              "parameters": {
                "subscription": {
                  "location": "path",
                  "description": "The subscription from which messages should be pulled.\nFormat is `projects/{project}/subscriptions/{sub}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/subscriptions/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/subscriptions/{subscriptionsId}:pull"
            },
            "list": {
              "id": "pubsub.projects.subscriptions.list",
              "path": "v1/{+project}/subscriptions",
              "description": "Lists matching subscriptions.",
              "httpMethod": "GET",
              "parameterOrder": [
                "project"
              ],
              "response": {
                "$ref": "ListSubscriptionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "pageToken": {
                  "description": "The value returned by the last `ListSubscriptionsResponse`; indicates that\nthis is a continuation of a prior `ListSubscriptions` call, and that the\nsystem should return the next page of data.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "Maximum number of subscriptions to return.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "project": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The name of the cloud project that subscriptions belong to.\nFormat is `projects/{project}`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/subscriptions"
            }
          }
        },
        "snapshots": {
          "methods": {
            "delete": {
              "path": "v1/{+snapshot}",
              "id": "pubsub.projects.snapshots.delete",
              "description": "Removes an existing snapshot. All messages retained in the snapshot\nare immediately dropped. After a snapshot is deleted, a new one may be\ncreated with the same name, but the new one has no association with the old\nsnapshot or its subscription, unless the same subscription is specified.",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "snapshot"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "snapshot": {
                  "description": "The name of the snapshot to delete.\nFormat is `projects/{project}/snapshots/{snap}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}"
            },
            "list": {
              "flatPath": "v1/projects/{projectsId}/snapshots",
              "path": "v1/{+project}/snapshots",
              "id": "pubsub.projects.snapshots.list",
              "description": "Lists the existing snapshots.",
              "parameterOrder": [
                "project"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "ListSnapshotsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "pageToken": {
                  "description": "The value returned by the last `ListSnapshotsResponse`; indicates that this\nis a continuation of a prior `ListSnapshots` call, and that the system\nshould return the next page of data.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Maximum number of snapshots to return.",
                  "format": "int32",
                  "type": "integer"
                },
                "project": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "description": "The name of the cloud project that snapshots belong to.\nFormat is `projects/{project}`.",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "create": {
              "request": {
                "$ref": "CreateSnapshotRequest"
              },
              "description": "Creates a snapshot from the requested subscription.\nIf the snapshot already exists, returns `ALREADY_EXISTS`.\nIf the requested subscription doesn't exist, returns `NOT_FOUND`.\n\nIf the name is not provided in the request, the server will assign a random\nname for this snapshot on the same project as the subscription, conforming\nto the\n[resource name format](https://cloud.google.com/pubsub/docs/overview#names).\nThe generated name is populated in the returned Snapshot object.\nNote that for REST API requests, you must specify a name in the request.",
              "response": {
                "$ref": "Snapshot"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Optional user-provided name for this snapshot.\nIf the name is not provided in the request, the server will assign a random\nname for this snapshot on the same project as the subscription.\nNote that for REST API requests, you must specify a name.\nFormat is `projects/{project}/snapshots/{snap}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}",
              "path": "v1/{+name}",
              "id": "pubsub.projects.snapshots.create"
            },
            "setIamPolicy": {
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}:setIamPolicy",
              "path": "v1/{+resource}:setIamPolicy",
              "id": "pubsub.projects.snapshots.setIamPolicy",
              "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "location": "path"
                }
              }
            },
            "getIamPolicy": {
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "GET",
              "parameters": {
                "resource": {
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}:getIamPolicy",
              "path": "v1/{+resource}:getIamPolicy",
              "id": "pubsub.projects.snapshots.getIamPolicy",
              "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
            },
            "testIamPermissions": {
              "path": "v1/{+resource}:testIamPermissions",
              "id": "pubsub.projects.snapshots.testIamPermissions",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/snapshots/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/snapshots/{snapshotsId}:testIamPermissions"
            }
          }
        },
        "topics": {
          "methods": {
            "getIamPolicy": {
              "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
              "httpMethod": "GET",
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:getIamPolicy",
              "id": "pubsub.projects.topics.getIamPolicy",
              "path": "v1/{+resource}:getIamPolicy"
            },
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "Topic"
              },
              "parameterOrder": [
                "topic"
              ],
              "parameters": {
                "topic": {
                  "description": "The name of the topic to get.\nFormat is `projects/{project}/topics/{topic}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}",
              "id": "pubsub.projects.topics.get",
              "path": "v1/{+topic}",
              "description": "Gets the configuration of a topic."
            },
            "publish": {
              "request": {
                "$ref": "PublishRequest"
              },
              "description": "Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic\ndoes not exist. The message payload must not be empty; it must contain\n either a non-empty data field, or at least one attribute.",
              "response": {
                "$ref": "PublishResponse"
              },
              "parameterOrder": [
                "topic"
              ],
              "httpMethod": "POST",
              "parameters": {
                "topic": {
                  "description": "The messages in the request will be published on this topic.\nFormat is `projects/{project}/topics/{topic}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:publish",
              "path": "v1/{+topic}:publish",
              "id": "pubsub.projects.topics.publish"
            },
            "testIamPermissions": {
              "id": "pubsub.projects.topics.testIamPermissions",
              "path": "v1/{+resource}:testIamPermissions",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
              "httpMethod": "POST",
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "parameters": {
                "resource": {
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/topics/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:testIamPermissions"
            },
            "delete": {
              "parameterOrder": [
                "topic"
              ],
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "topic": {
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path",
                  "description": "Name of the topic to delete.\nFormat is `projects/{project}/topics/{topic}`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}",
              "path": "v1/{+topic}",
              "id": "pubsub.projects.topics.delete",
              "description": "Deletes the topic with the given name. Returns `NOT_FOUND` if the topic\ndoes not exist. After a topic is deleted, a new topic may be created with\nthe same name; this is an entirely new topic with none of the old\nconfiguration or subscriptions. Existing subscriptions to this topic are\nnot deleted, but their `topic` field is set to `_deleted-topic_`."
            },
            "list": {
              "flatPath": "v1/projects/{projectsId}/topics",
              "id": "pubsub.projects.topics.list",
              "path": "v1/{+project}/topics",
              "description": "Lists matching topics.",
              "httpMethod": "GET",
              "parameterOrder": [
                "project"
              ],
              "response": {
                "$ref": "ListTopicsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "pageToken": {
                  "description": "The value returned by the last `ListTopicsResponse`; indicates that this is\na continuation of a prior `ListTopics` call, and that the system should\nreturn the next page of data.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "Maximum number of topics to return.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "project": {
                  "description": "The name of the cloud project that topics belong to.\nFormat is `projects/{project}`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              }
            },
            "setIamPolicy": {
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}:setIamPolicy",
              "path": "v1/{+resource}:setIamPolicy",
              "id": "pubsub.projects.topics.setIamPolicy",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy."
            },
            "create": {
              "response": {
                "$ref": "Topic"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/pubsub"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/topics/[^/]+$",
                  "location": "path",
                  "description": "The name of the topic. It must have the format\n`\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter,\nand contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),\nunderscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent\nsigns (`%`). It must be between 3 and 255 characters in length, and it\nmust not start with `\"goog\"`.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/topics/{topicsId}",
              "path": "v1/{+name}",
              "id": "pubsub.projects.topics.create",
              "description": "Creates the given topic with the given name.",
              "request": {
                "$ref": "Topic"
              }
            }
          },
          "resources": {
            "subscriptions": {
              "methods": {
                "list": {
                  "description": "Lists the name of the subscriptions for this topic.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "topic"
                  ],
                  "response": {
                    "$ref": "ListTopicSubscriptionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/pubsub"
                  ],
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The value returned by the last `ListTopicSubscriptionsResponse`; indicates\nthat this is a continuation of a prior `ListTopicSubscriptions` call, and\nthat the system should return the next page of data."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of subscription names to return.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "topic": {
                      "description": "The name of the topic that subscriptions are attached to.\nFormat is `projects/{project}/topics/{topic}`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/topics/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/topics/{topicsId}/subscriptions",
                  "id": "pubsub.projects.topics.subscriptions.list",
                  "path": "v1/{+topic}/subscriptions"
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "pp": {
      "location": "query",
      "description": "Pretty-print response.",
      "type": "boolean",
      "default": "true"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "bearer_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth bearer token."
    }
  },
  "schemas": {
    "CloudAuditOptions": {
      "description": "Write a Cloud Audit log",
      "type": "object",
      "properties": {},
      "id": "CloudAuditOptions"
    },
    "Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` or `joe@example.com`.\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `domain:{domain}`: A Google Apps domain name that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.\nRequired",
          "type": "string"
        }
      },
      "id": "Binding"
    },
    "SeekRequest": {
      "description": "Request for the `Seek` method.",
      "type": "object",
      "properties": {
        "time": {
          "description": "The time to seek to.\nMessages retained in the subscription that were published before this\ntime are marked as acknowledged, and messages retained in the\nsubscription that were published after this time are marked as\nunacknowledged. Note that this operation affects only those messages\nretained in the subscription (configured by the combination of\n`message_retention_duration` and `retain_acked_messages`). For example,\nif `time` corresponds to a point before the message retention\nwindow (or to a point before the system's notion of the subscription\ncreation time), only retained messages will be marked as unacknowledged,\nand already-expunged messages will not be restored.",
          "format": "google-datetime",
          "type": "string"
        },
        "snapshot": {
          "description": "The snapshot to seek to. The snapshot's topic must be the same as that of\nthe provided subscription.\nFormat is `projects/{project}/snapshots/{snap}`.",
          "type": "string"
        }
      },
      "id": "SeekRequest"
    },
    "ReceivedMessage": {
      "id": "ReceivedMessage",
      "description": "A message and its corresponding acknowledgment ID.",
      "type": "object",
      "properties": {
        "message": {
          "description": "The message.",
          "$ref": "PubsubMessage"
        },
        "ackId": {
          "description": "This ID can be used to acknowledge the received message.",
          "type": "string"
        }
      }
    },
    "PushConfig": {
      "description": "Configuration for a push delivery endpoint.",
      "type": "object",
      "properties": {
        "pushEndpoint": {
          "description": "A URL locating the endpoint to which messages should be pushed.\nFor example, a Webhook endpoint might use \"https://example.com/push\".",
          "type": "string"
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Endpoint configuration attributes.\n\nEvery endpoint has a set of API supported attributes that can be used to\ncontrol different aspects of the message delivery.\n\nThe currently supported attribute is `x-goog-version`, which you can\nuse to change the format of the pushed message. This attribute\nindicates the version of the data expected by the endpoint. This\ncontrols the shape of the pushed message (i.e., its fields and metadata).\nThe endpoint version is based on the version of the Pub/Sub API.\n\nIf not present during the `CreateSubscription` call, it will default to\nthe version of the API used to make such call. If not present during a\n`ModifyPushConfig` call, its value will not be changed. `GetSubscription`\ncalls will always return a valid version, even if the subscription was\ncreated without this attribute.\n\nThe possible values for this attribute are:\n\n* `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.\n* `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.",
          "type": "object"
        }
      },
      "id": "PushConfig"
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed."
        }
      }
    },
    "PullRequest": {
      "description": "Request for the `Pull` method.",
      "type": "object",
      "properties": {
        "maxMessages": {
          "description": "The maximum number of messages returned for this request. The Pub/Sub\nsystem may return fewer than the number specified.",
          "format": "int32",
          "type": "integer"
        },
        "returnImmediately": {
          "description": "If this field set to true, the system will respond immediately even if\nit there are no messages available to return in the `Pull` response.\nOtherwise, the system may wait (for a bounded amount of time) until at\nleast one message is available, rather than returning no messages. The\nclient may cancel the request if it does not wish to wait any longer for\nthe response.",
          "type": "boolean"
        }
      },
      "id": "PullRequest"
    },
    "PublishRequest": {
      "description": "Request for the Publish method.",
      "type": "object",
      "properties": {
        "messages": {
          "description": "The messages to publish.",
          "type": "array",
          "items": {
            "$ref": "PubsubMessage"
          }
        }
      },
      "id": "PublishRequest"
    },
    "Rule": {
      "description": "A rule to be applied in a Policy.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Human-readable description of the rule.",
          "type": "string"
        },
        "conditions": {
          "description": "Additional restrictions that must be met",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "logConfig": {
          "description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries\nthat match the LOG action.",
          "type": "array",
          "items": {
            "$ref": "LogConfig"
          }
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if\nthe PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "permissions": {
          "description": "A permission is a string of form '\u003cservice\u003e.\u003cresource type\u003e.\u003cverb\u003e'\n(e.g., 'storage.buckets.list'). A value of '*' matches all permissions,\nand a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "action": {
          "description": "Required",
          "type": "string",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log\nthe request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ],
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ]
        },
        "notIn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "If one or more 'not_in' clauses are specified, the rule matches\nif the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries.\nThe format for in and not_in entries is the same as for members in a\nBinding (see google/iam/v1/policy.proto)."
        }
      },
      "id": "Rule"
    },
    "UpdateSubscriptionRequest": {
      "description": "Request for the UpdateSubscription method.",
      "type": "object",
      "properties": {
        "subscription": {
          "$ref": "Subscription",
          "description": "The updated subscription object."
        },
        "updateMask": {
          "type": "string",
          "description": "Indicates which fields in the provided subscription to update.\nMust be specified and non-empty.",
          "format": "google-fieldmask"
        }
      },
      "id": "UpdateSubscriptionRequest"
    },
    "LogConfig": {
      "description": "Specifies what kind of log the caller must write\nIncrement a streamz counter with the specified metric and field names.\n\nMetric names should start with a '/', generally be lowercase-only,\nand end in \"_count\". Field names should not contain an initial slash.\nThe actual exported metric names will have \"/iam/policy\" prepended.\n\nField names correspond to IAM request parameters and field values are\ntheir respective values.\n\nAt present the only supported field names are\n   - \"iam_principal\", corresponding to IAMContext.principal;\n   - \"\" (empty string), resulting in one aggretated counter with no field.\n\nExamples:\n  counter { metric: \"/debug_access_count\"  field: \"iam_principal\" }\n  ==\u003e increment counter /iam/policy/backend_debug_access_count\n                        {iam_principal=[value of IAMContext.principal]}\n\nAt this time we do not support:\n* multiple field names (though this may be supported in the future)\n* decrementing the counter\n* incrementing it by anything other than 1",
      "type": "object",
      "properties": {
        "counter": {
          "description": "Counter options.",
          "$ref": "CounterOptions"
        },
        "dataAccess": {
          "description": "Data access options.",
          "$ref": "DataAccessOptions"
        },
        "cloudAudit": {
          "$ref": "CloudAuditOptions",
          "description": "Cloud audit options."
        }
      },
      "id": "LogConfig"
    },
    "PublishResponse": {
      "description": "Response for the `Publish` method.",
      "type": "object",
      "properties": {
        "messageIds": {
          "description": "The server-assigned ID of each published message, in the same order as\nthe messages in the request. IDs are guaranteed to be unique within\nthe topic.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "PublishResponse"
    },
    "Subscription": {
      "id": "Subscription",
      "description": "A subscription resource.",
      "type": "object",
      "properties": {
        "ackDeadlineSeconds": {
          "description": "This value is the maximum time after a subscriber receives a message\nbefore the subscriber should acknowledge the message. After message\ndelivery but before the ack deadline expires and before the message is\nacknowledged, it is an outstanding message and will not be delivered\nagain during that time (on a best-effort basis).\n\nFor pull subscriptions, this value is used as the initial value for the ack\ndeadline. To override this value for a given message, call\n`ModifyAckDeadline` with the corresponding `ack_id` if using\npull.\nThe minimum custom deadline you can specify is 10 seconds.\nThe maximum custom deadline you can specify is 600 seconds (10 minutes).\nIf this parameter is 0, a default value of 10 seconds is used.\n\nFor push delivery, this value is also used to set the request timeout for\nthe call to the push endpoint.\n\nIf the subscriber never acknowledges the message, the Pub/Sub\nsystem will eventually redeliver the message.",
          "format": "int32",
          "type": "integer"
        },
        "messageRetentionDuration": {
          "description": "How long to retain unacknowledged messages in the subscription's backlog,\nfrom the moment a message is published.\nIf `retain_acked_messages` is true, then this also configures the retention\nof acknowledged messages, and thus configures how far back in time a `Seek`\ncan be done. Defaults to 7 days. Cannot be more than 7 days or less than 10\nminutes.",
          "format": "google-duration",
          "type": "string"
        },
        "initialSnapshot": {
          "description": "Used only in a `CreateSubscription` request; this field will be ignored in\nall other requests and blank in any response.\nThe name of the snapshot to seek the new subscription to.\nEither this field or the `topic` field must be provided in a\n`CreateSubscription` call, but not both. If `initial_snapshot` is provided,\nthe newly-created subscription will seek to this snapshot, and its topic\nwill be set to that of the snapshot's.\nFormat is `projects/{project}/snapshots/{snap}`.",
          "type": "string"
        },
        "retainAckedMessages": {
          "description": "Indicates whether to retain acknowledged messages. If true, then\nmessages are not expunged from the subscription's backlog, even if they are\nacknowledged, until they fall out of the `message_retention_duration`\nwindow.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the subscription. It must have the format\n`\"projects/{project}/subscriptions/{subscription}\"`. `{subscription}` must\nstart with a letter, and contain only letters (`[A-Za-z]`), numbers\n(`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),\nplus (`+`) or percent signs (`%`). It must be between 3 and 255 characters\nin length, and it must not start with `\"goog\"`.",
          "type": "string"
        },
        "topic": {
          "description": "The name of the topic from which this subscription is receiving messages.\nFormat is `projects/{project}/topics/{topic}`.\nThe value of this field will be `_deleted-topic_` if the topic has been\ndeleted.",
          "type": "string"
        },
        "pushConfig": {
          "$ref": "PushConfig",
          "description": "If push delivery is used with this subscription, this field is\nused to configure it. An empty `pushConfig` signifies that the subscriber\nwill pull and ack messages using API methods."
        }
      }
    },
    "SeekResponse": {
      "type": "object",
      "properties": {},
      "id": "SeekResponse"
    },
    "ModifyAckDeadlineRequest": {
      "description": "Request for the ModifyAckDeadline method.",
      "type": "object",
      "properties": {
        "ackDeadlineSeconds": {
          "description": "The new ack deadline with respect to the time this request was sent to\nthe Pub/Sub system. For example, if the value is 10, the new\nack deadline will expire 10 seconds after the `ModifyAckDeadline` call\nwas made. Specifying zero may immediately make the message available for\nanother pull request.\nThe minimum deadline you can specify is 0 seconds.\nThe maximum deadline you can specify is 600 seconds (10 minutes).",
          "format": "int32",
          "type": "integer"
        },
        "ackIds": {
          "description": "List of acknowledgment IDs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ModifyAckDeadlineRequest"
    },
    "Snapshot": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the snapshot.",
          "type": "string"
        },
        "topic": {
          "description": "The name of the topic from which this snapshot is retaining messages.",
          "type": "string"
        },
        "expirationTime": {
          "description": "The snapshot is guaranteed to exist up until this time.\nA newly-created snapshot expires no later than 7 days from the time of its\ncreation. Its exact lifetime is determined at creation by the existing\nbacklog in the source subscription. Specifically, the lifetime of the\nsnapshot is `7 days - (age of oldest unacked message in the subscription)`.\nFor example, consider a subscription whose oldest unacked message is 3 days\nold. If a snapshot is created from this subscription, the snapshot -- which\nwill always capture this 3-day-old backlog as long as the snapshot\nexists -- will expire in 4 days.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "Snapshot",
      "description": "A snapshot resource."
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        }
      },
      "id": "SetIamPolicyRequest"
    },
    "ModifyPushConfigRequest": {
      "description": "Request for the ModifyPushConfig method.",
      "type": "object",
      "properties": {
        "pushConfig": {
          "description": "The push configuration for future deliveries.\n\nAn empty `pushConfig` indicates that the Pub/Sub system should\nstop pushing messages from the given subscription and allow\nmessages to be pulled and acknowledged - effectively pausing\nthe subscription if `Pull` is not called.",
          "$ref": "PushConfig"
        }
      },
      "id": "ModifyPushConfigRequest"
    },
    "PubsubMessage": {
      "type": "object",
      "properties": {
        "data": {
          "description": "The message payload.",
          "format": "byte",
          "type": "string"
        },
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional attributes for this message.",
          "type": "object"
        },
        "messageId": {
          "description": "ID of this message, assigned by the server when the message is published.\nGuaranteed to be unique within the topic. This value may be read by a\nsubscriber that receives a `PubsubMessage` via a `Pull` call or a push\ndelivery. It must not be populated by the publisher in a `Publish` call.",
          "type": "string"
        },
        "publishTime": {
          "description": "The time at which the message was published, populated by the server when\nit receives the `Publish` call. It must not be populated by the\npublisher in a `Publish` call.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "PubsubMessage",
      "description": "A message data and its attributes. The message payload must not be empty;\nit must contain either a non-empty data field, or at least one attribute."
    },
    "AcknowledgeRequest": {
      "type": "object",
      "properties": {
        "ackIds": {
          "description": "The acknowledgment ID for the messages being acknowledged that was returned\nby the Pub/Sub system in the `Pull` response. Must not be empty.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AcknowledgeRequest",
      "description": "Request for the Acknowledge method."
    },
    "ListTopicsResponse": {
      "description": "Response for the `ListTopics` method.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more topics that match the\nrequest; this value should be passed in a new `ListTopicsRequest`.",
          "type": "string"
        },
        "topics": {
          "description": "The resulting topics.",
          "type": "array",
          "items": {
            "$ref": "Topic"
          }
        }
      },
      "id": "ListTopicsResponse"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "ListTopicSubscriptionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more subscriptions that match\nthe request; this value should be passed in a new\n`ListTopicSubscriptionsRequest` to get more subscriptions.",
          "type": "string"
        },
        "subscriptions": {
          "description": "The names of the subscriptions that match the request.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "ListTopicSubscriptionsResponse",
      "description": "Response for the `ListTopicSubscriptions` method.",
      "type": "object"
    },
    "PullResponse": {
      "description": "Response for the `Pull` method.",
      "type": "object",
      "properties": {
        "receivedMessages": {
          "description": "Received Pub/Sub messages. The Pub/Sub system will return zero messages if\nthere are no more available in the backlog. The Pub/Sub system may return\nfewer than the `maxMessages` requested even if there are more messages\navailable in the backlog.",
          "type": "array",
          "items": {
            "$ref": "ReceivedMessage"
          }
        }
      },
      "id": "PullResponse"
    },
    "Condition": {
      "description": "A condition to be met.",
      "type": "object",
      "properties": {
        "values": {
          "description": "The objects of the condition. This is mutually exclusive with 'value'.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "iam": {
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION",
            "SECURITY_REALM",
            "APPROVER",
            "JUSTIFICATION_TYPE"
          ],
          "description": "Trusted attributes supplied by the IAM system.",
          "type": "string",
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which\nmust only be used for attribution, not authorization.",
            "Any of the security realms in the IAMContext (go/security-realms).\nWhen used with IN, the condition indicates \"any of the request's realms\nmatch one of the given values; with NOT_IN, \"none of the realms match\nany of the given values\". It is not permitted to grant access based on\nthe *absence* of a realm, so realm conditions can only be used in\na \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN).",
            "An approver (distinct from the requester) that has authorized this\nrequest.\nWhen used with IN, the condition indicates that one of the approvers\nassociated with the request matches the specified principal, or is a\nmember of the specified group. Approvers can only grant additional\naccess, and are thus only used in a strictly positive context\n(e.g. ALLOW/IN or DENY/NOT_IN).\nSee: go/rpc-security-policy-dynamicauth.",
            "What types of justifications have been supplied with this request.\nString values should match enum names from tech.iam.JustificationType,\ne.g. \"MANUAL_STRING\". It is not permitted to grant access based on\nthe *absence* of a justification, so justification conditions can only\nbe used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN).\n\nMultiple justifications, e.g., a Buganizer ID and a manually-entered\nreason, are normal and supported."
          ]
        },
        "op": {
          "type": "string",
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "The condition is true if the subject (or any element of it if it is\na set) matches any of the supplied values.",
            "The condition is true if the subject (or every element of it if it is\na set) matches none of the supplied values.",
            "Subject is discharged"
          ],
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ],
          "description": "An operator to apply the subject with."
        },
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "value": {
          "description": "DEPRECATED. Use 'values' instead.",
          "type": "string"
        },
        "sys": {
          "type": "string",
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ],
          "description": "Trusted attributes supplied by any service that owns resources and uses\nthe IAM system for access control."
        }
      },
      "id": "Condition"
    },
    "CounterOptions": {
      "description": "Options for counters",
      "type": "object",
      "properties": {
        "metric": {
          "description": "The metric to update.",
          "type": "string"
        },
        "field": {
          "type": "string",
          "description": "The field value to attribute."
        }
      },
      "id": "CounterOptions"
    },
    "AuditLogConfig": {
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        }
      },
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\nfoo@gmail.com from DATA_READ logging.",
      "type": "object"
    },
    "ListSubscriptionsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more subscriptions that match\nthe request; this value should be passed in a new\n`ListSubscriptionsRequest` to get more subscriptions.",
          "type": "string"
        },
        "subscriptions": {
          "description": "The subscriptions that match the request.",
          "type": "array",
          "items": {
            "$ref": "Subscription"
          }
        }
      },
      "id": "ListSubscriptionsResponse",
      "description": "Response for the `ListSubscriptions` method."
    },
    "ListSnapshotsResponse": {
      "description": "Response for the `ListSnapshots` method.",
      "type": "object",
      "properties": {
        "snapshots": {
          "description": "The resulting snapshots.",
          "type": "array",
          "items": {
            "$ref": "Snapshot"
          }
        },
        "nextPageToken": {
          "description": "If not empty, indicates that there may be more snapshot that match the\nrequest; this value should be passed in a new `ListSnapshotsRequest`.",
          "type": "string"
        }
      },
      "id": "ListSnapshotsResponse"
    },
    "CreateSnapshotRequest": {
      "properties": {
        "subscription": {
          "description": "The subscription whose backlog the snapshot retains.\nSpecifically, the created snapshot is guaranteed to retain:\n (a) The existing backlog on the subscription. More precisely, this is\n     defined as the messages in the subscription's backlog that are\n     unacknowledged upon the successful completion of the\n     `CreateSnapshot` request; as well as:\n (b) Any messages published to the subscription's topic following the\n     successful completion of the CreateSnapshot request.\nFormat is `projects/{project}/subscriptions/{sub}`.",
          "type": "string"
        }
      },
      "id": "CreateSnapshotRequest",
      "description": "Request for the `CreateSnapshot` method.",
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method."
    },
    "Topic": {
      "description": "A topic resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the topic. It must have the format\n`\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter,\nand contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),\nunderscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent\nsigns (`%`). It must be between 3 and 255 characters in length, and it\nmust not start with `\"goog\"`.",
          "type": "string"
        }
      },
      "id": "Topic"
    },
    "Policy": {
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `Binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\",\n          ]\n        },\n        {\n          \"role\": \"roles/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam).",
      "type": "object",
      "properties": {
        "rules": {
          "type": "array",
          "items": {
            "$ref": "Rule"
          },
          "description": "If more than one rule is specified, the rules are applied in the following\nmanner:\n- All matching LOG rules are always applied.\n- If any DENY/DENY_WITH_LOG rule matches, permission is denied.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is\n  granted.\n  Logging will be applied if one or more matching rule requires logging.\n- Otherwise, if no rule applies, permission is denied."
        },
        "version": {
          "description": "Version of the `Policy`. The default version is 0.",
          "format": "int32",
          "type": "integer"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`.\nMultiple `bindings` must not be specified for the same `role`.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
          "format": "byte",
          "type": "string"
        },
        "iamOwned": {
          "type": "boolean"
        }
      },
      "id": "Policy"
    },
    "DataAccessOptions": {
      "description": "Write a Data Access (Gin) log",
      "type": "object",
      "properties": {},
      "id": "DataAccessOptions"
    },
    "AuditConfig": {
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConifg must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditConfig are exempted.\nExample Policy with multiple AuditConfigs:\n{\n  \"audit_configs\": [\n    {\n      \"service\": \"allServices\"\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        },\n        {\n          \"log_type\": \"ADMIN_READ\",\n        }\n      ]\n    },\n    {\n      \"service\": \"fooservice@googleapis.com\"\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n          \"exempted_members\": [\n            \"user:bar@gmail.com\"\n          ]\n        }\n      ]\n    }\n  ]\n}\nFor fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts foo@gmail.com from DATA_READ logging, and\nbar@gmail.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.\nNext ID: 4",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AuditConfig"
    }
  },
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "version": "v1",
  "baseUrl": "https://pubsub.googleapis.com/",
  "canonicalName": "Pubsub",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/pubsub": {
          "description": "View and manage Pub/Sub topics and subscriptions"
        }
      }
    }
  },
  "servicePath": "",
  "description": "Provides reliable, many-to-many, asynchronous messaging between applications.\n",
  "kind": "discovery#restDescription",
  "rootUrl": "https://pubsub.googleapis.com/",
  "basePath": "",
  "ownerDomain": "google.com",
  "name": "pubsub"
}
